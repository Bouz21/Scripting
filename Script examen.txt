from datetime import datetime# Stel het pad voor alle bestanden inbestand_pad = r"C:\Test1\\"print("= = = Programma kentekensignalering gestart = = = ")# Toon de huidige datum en tijdhuidige_datum_tijd = datetime.now()print("Huidige Datum:", huidige_datum_tijd.date())print("Huidige Tijd:", huidige_datum_tijd.time())# Open RDW.csv en GescandeData.csvwith open(bestand_pad + "RDW.csv", "r") as rdw_bestand, open(bestand_pad + "GescandeData.csv", "r") as gescande_bestand:    aantal_verwerkt, aantal_fout = 0, 0    # Vraag of het bestand vals.txt leeggemaakt moet worden    while True:        antwoord = input("Wil je het bestand vals.txt bijwerken of leegmaken? ").lower()        if antwoord in ["bijwerken", "leegmaken"]:            modus = "w" if antwoord == "leegmaken" else "a"            break        else:            print("Ongeldige invoer, typ 'bijwerken' of 'leegmaken'.")    with open(bestand_pad + "vals.txt", modus) as signaleringen:        # Verwerk elke rij in GescandeData.csv        for auto in gescande_bestand:            if len(auto.strip()) < 10:                continue            auto_delen = auto.strip().split(",")            scan_kenteken, scan_merk, scan_type = auto_delen[0], auto_delen[1], auto_delen[2]            aantal_verwerkt += 1                        match = False            rdw_bestand.seek(0)            for rdw_auto in rdw_bestand:                rdw_auto_delen = rdw_auto.strip().split(",")                rdw_kenteken, rdw_merk, rdw_type = rdw_auto_delen[0], rdw_auto_delen[2], rdw_auto_delen[3]                # Als kentekens overeenkomen, dan wordt match op True gezet                if scan_kenteken == rdw_kenteken:                    match = True                    break            if not match:                # Onbekend kenteken                aantal_fout += 1                print("Onbekend kenteken:", scan_kenteken, scan_merk, scan_type)                signaleringen.write(f"Onbekend,{scan_kenteken},{scan_merk},{scan_type}\n")            else:                if scan_merk != rdw_merk or scan_type != rdw_type:                    # Onjuist kenteken                    aantal_fout += 1                    print("Onjuist kenteken:", scan_kenteken, scan_merk, scan_type)                    print("Geregistreerd als:", rdw_kenteken, rdw_merk, rdw_type)                    signaleringen.write(f"Onjuist,{scan_kenteken},{scan_merk},{scan_type}\n")# Toon het aantal correcte en onjuiste kentekensprint("Aantal correcte kentekens:", aantal_verwerkt - aantal_fout)print("Aantal onjuiste kentekens:", aantal_fout)print("Eindtotalen KentekenCheck")print("= = = Programma kentekensignalering afgesloten = = =")# Toon de huidige datum en tijd opnieuwhuidige_datum_tijd = datetime.now()print("Huidige Datum:", huidige_datum_tijd.date())print("Huidige Tijd:", huidige_datum_tijd.time())